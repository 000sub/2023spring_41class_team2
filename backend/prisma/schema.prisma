generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  userid    String   @unique
  password  String
  nickname  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin   Boolean  @default(false)
  credit    Int      @default(0)
  isBanned  Boolean  @default(false)
  Solved    Solved[]
}

model Problem {
  id                Int                 @id @default(autoincrement())
  title             String
  content           String?
  answer            String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  hidden            Boolean             @default(false)
  Solved            Solved[]
  SuggestedQuestion SuggestedQuestion[]
}

model Solved {
  id        Int       @id @default(autoincrement())
  userid    String
  problemid Int
  status    Int       @default(0)
  Chatlog   Chatlog[]
  problem   Problem   @relation(fields: [problemid], references: [id])
  user      User      @relation(fields: [userid], references: [userid])

  @@index([problemid], map: "Solved_problemid_fkey")
  @@index([userid], map: "Solved_userid_fkey")
}

model SuggestedQuestion {
  id        Int     @id @default(autoincrement())
  problemid Int
  content   String
  answer    String?
  problem   Problem @relation(fields: [problemid], references: [id])

  @@index([problemid], map: "SuggestedQuestion_problemid_fkey")
}

model Chatlog {
  id        Int      @id @default(autoincrement())
  solvedid  Int
  createdAt DateTime @default(now())
  content   String
  solved    Solved   @relation(fields: [solvedid], references: [id])

  @@index([solvedid], map: "Chatlog_solvedid_fkey")
}
